MACRO(WRAP_CPP outfiles)
	# get include dirs
	QT4_GET_MOC_FLAGS(moc_flags)
	QT4_EXTRACT_OPTIONS(moc_files moc_options ${ARGN})

	FOREACH(it ${moc_files})
		GET_FILENAME_COMPONENT(_abs_FILE ${it} ABSOLUTE)
		GET_FILENAME_COMPONENT(_abs_PATH ${_abs_FILE} PATH)
		GET_FILENAME_COMPONENT(_basename ${it} NAME_WE)

		SET(_HAS_MOC false)

		IF(EXISTS ${_abs_PATH}/${_basename}.cpp)
			SET(_header ${_abs_PATH}/${_basename}.cpp)
			FILE(READ ${_header} _contents)
			STRING(REGEX MATCHALL "# *include +[^ ]+\\.moc[\">]" _match "${_contents}")
			IF(_match)
				SET(_HAS_MOC true)
				FOREACH(_current_MOC_INC ${_match})
					STRING(REGEX MATCH "[^ <\"]+\\.moc" _current_MOC "${_current_MOC_INC}")
					SET(_moc    ${CMAKE_CURRENT_BINARY_DIR}/${_current_MOC})
					QT4_CREATE_MOC_COMMAND(${_abs_FILE} ${_moc} "${_moc_INCS}" "")
					MACRO_ADD_FILE_DEPENDENCIES(${_abs_FILE} ${_moc})
				ENDFOREACH(_current_MOC_INC)
			ENDIF()
		ENDIF()
		IF(NOT _HAS_MOC)
			FILE(READ ${_abs_FILE} _contents)
			STRING(REGEX MATCHALL "Q_OBJECT" _match2 "${_contents}")
			IF(_match2)
				QT4_MAKE_OUTPUT_FILE(${_abs_FILE} moc_ cxx outfile)
				QT4_CREATE_MOC_COMMAND(${_abs_FILE} ${outfile} "${moc_flags}" "${moc_options}")
				SET(${outfiles} ${${outfiles}} ${outfile})
			ENDIF()
		ENDIF()
	ENDFOREACH(it)
ENDMACRO(WRAP_CPP)

macro(ADD_ARTWORK_DIR art_dir)
	FILE(GLOB ARTWORKS ${art_dir} "${art_dir}/*")
	GET_FILENAME_COMPONENT(_abs_PATH ${art_dir} ABSOLUTE)
	FOREACH(ART ${ARTWORKS})
		GET_FILENAME_COMPONENT(_abs_FILE ${ART} ABSOLUTE)
		IF(IS_DIRECTORY ${_abs_FILE} AND NOT ${_abs_PATH} STREQUAL ${_abs_FILE})
			ADD_ARTWORK(${_abs_FILE})
		ENDIF()
	ENDFOREACH()
endmacro()

macro(ADD_ARTWORK art)
	MESSAGE(STATUS "Added artwork: ${art} to ${CHARON_SHARE_DIR}")
	INSTALL(DIRECTORY ${art}
		DESTINATION ${CHARON_SHARE_DIR_DEF}
	)
endmacro()
